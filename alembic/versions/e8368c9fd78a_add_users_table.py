"""Add users table

Revision ID: e8368c9fd78a
Revises: d73730eddc1e
Create Date: 2024-06-13 16:58:05.051125

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e8368c9fd78a'
down_revision: Union[str, None] = 'd73730eddc1e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


# def upgrade() -> None:
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.drop_table('department')
#     op.drop_table('tables')
#     op.drop_table('vendor')
#     op.drop_table('guardian')
#     op.drop_table('dashboard_components')
#     op.drop_table('admin')
#     op.drop_table('employee')
#     op.drop_table('student')
#     op.drop_table('dashboards')
#     # ### end Alembic commands ###


# def downgrade() -> None:
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.create_table('dashboards',
#     sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
#     sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
#     sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=False),
#     sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=False),
#     sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
#     sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
#     sa.PrimaryKeyConstraint('id', name='dashboards_pkey'),
#     postgresql_ignore_search_path=False
#     )
#     op.create_table('student',
#     sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
#     sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
#     sa.Column('grade', sa.INTEGER(), autoincrement=False, nullable=False),
#     sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
#     sa.Column('enrollment_date', sa.DATE(), autoincrement=False, nullable=True),
#     sa.Column('guardian_id', sa.INTEGER(), autoincrement=False, nullable=True),
#     sa.ForeignKeyConstraint(['guardian_id'], ['guardian.id'], name='fk_student_guardian_id'),
#     sa.PrimaryKeyConstraint('id', name='student_pkey')
#     )
#     op.create_table('employee',
#     sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
#     sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
#     sa.Column('department', sa.VARCHAR(), autoincrement=False, nullable=False),
#     sa.Column('is_manager', sa.BOOLEAN(), autoincrement=False, nullable=False),
#     sa.Column('start_date', sa.DATE(), autoincrement=False, nullable=True),
#     sa.Column('department_id', sa.INTEGER(), autoincrement=False, nullable=True),
#     sa.ForeignKeyConstraint(['department_id'], ['department.id'], name='fk_employee_department_id'),
#     sa.PrimaryKeyConstraint('id', name='employee_pkey')
#     )
#     op.create_table('admin',
#     sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
#     sa.PrimaryKeyConstraint('id', name='admin_pkey')
#     )
#     op.create_table('dashboard_components',
#     sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
#     sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
#     sa.Column('property', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
#     sa.Column('data_property', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
#     sa.Column('filter_property', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
#     sa.Column('dashboard_id', sa.VARCHAR(), autoincrement=False, nullable=False),
#     sa.ForeignKeyConstraint(['dashboard_id'], ['dashboards.id'], name='fk_dashboard_components_dashboard_id', ondelete='CASCADE'),
#     sa.PrimaryKeyConstraint('id', name='dashboard_components_pkey')
#     )
#     op.create_table('guardian',
#     sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
#     sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
#     sa.Column('contact_number', sa.VARCHAR(), autoincrement=False, nullable=True),
#     sa.PrimaryKeyConstraint('id', name='guardian_pkey')
#     )
#     op.create_table('vendor',
#     sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
#     sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
#     sa.Column('contact_number', sa.VARCHAR(), autoincrement=False, nullable=True),
#     sa.PrimaryKeyConstraint('id', name='vendor_pkey')
#     )
#     op.create_table('tables',
#     sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
#     sa.Column('table_name', sa.VARCHAR(), autoincrement=False, nullable=False),
#     sa.PrimaryKeyConstraint('id', name='tables_pkey'),
#     sa.UniqueConstraint('table_name', name='tables_table_name_key')
#     )
#     op.create_table('department',
#     sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
#     sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
#     sa.PrimaryKeyConstraint('id', name='department_pkey')
#     )
#     # ### end Alembic commands ###

def upgrade():
    # Define the users table schema
    op.create_table(
        'users',
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('username', sa.String(length=50), nullable=False),
        sa.Column('hashed_password', sa.String(length=128), nullable=False),
        # Add other columns as needed (e.g., email, created_at, etc.)
    )

def downgrade():
    # Downgrade by dropping the users table
    op.drop_table('users')